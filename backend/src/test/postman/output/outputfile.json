{
  "collection": {
    "_": {
      "postman_id": "303af0cc-01f6-4956-9cab-e017191ac24b",
      "exporter_id": "21386216"
    },
    "item": [
      {
        "id": "12b1bff9-63d2-4782-be69-0c4d40b517ba",
        "name": "Category",
        "item": [
          {
            "id": "20f3695d-19a8-45d9-8e96-026be4837c38",
            "name": "Create Category",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "api",
                  "category"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"title\": \"{{new_category_title}}\"\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14844ee3-5376-48ba-8a10-a1266ac37b23",
                  "type": "text/javascript",
                  "exec": [
                    "pm.environment.set(\"new_category_title\", pm.variables.replaceIn('{{$randomJobType}}'));",
                    "",
                    "",
                    ""
                  ],
                  "_lastExecutionId": "d30ec3eb-6d53-4726-968b-ad4e0d655766"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "51443e4c-1725-4d88-82b0-7cf83c238c9b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 201\", function () {",
                    "    pm.response.to.have.status(201);",
                    "});",
                    "",
                    "const schema = {",
                    "   \"id\": \"number\",",
                    "    \"title\": \"string\"",
                    "};",
                    "pm.test('Schema is valid', function() {",
                    "  pm.response.to.have.jsonSchema(schema);",
                    "});",
                    "",
                    "const jsonData = pm.response.json();",
                    "",
                    "pm.test(\"Test data type of the response\", () => {",
                    "    pm.expect(jsonData).to.be.an(\"object\");",
                    "    pm.expect(jsonData.id).to.be.a(\"number\");",
                    "    pm.expect(jsonData.title).to.be.a(\"string\");",
                    "});",
                    "",
                    "",
                    "pm.test(\"Category added correctly\", () => {",
                    "    pm.expect(jsonData.title).to.eql(pm.environment.get(\"new_category_title\"));",
                    "});",
                    "",
                    "if(pm.environment.get(\"environmentName\")==='test'){",
                    "",
                    "    pm.environment.set(\"new_category_id\", jsonData.id);",
                    "        pm.environment.set(\"new_category_status\", 'CREATED');",
                    "",
                    "    postman.setNextRequest(\"Get All Categories\");",
                    "}",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    ""
                  ],
                  "_lastExecutionId": "f65798a8-3f3b-4508-bf7e-1b5a5c049650"
                }
              }
            ]
          },
          {
            "id": "9d97d5d7-46df-4cb3-aa74-5a78b178dc53",
            "name": "Get All Categories",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "api",
                  "category"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e7930b99-f0c0-48be-83f5-66c73fba1261",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "",
                    "var schema = {",
                    "    \"type\": \"array\",",
                    "    \"items\": [ {",
                    "       \"id\": \"number\",",
                    "        \"title\": \"string\"",
                    "    }]",
                    "};",
                    "",
                    "pm.test('Schema is valid', function() {",
                    "  pm.response.to.have.jsonSchema(schema);",
                    "});",
                    "",
                    "",
                    "if(pm.environment.get(\"environmentName\")==='test'){",
                    "",
                    "const jsonData = pm.response.json();",
                    "",
                    "    const newCategory = {",
                    "        id:pm.environment.get(\"new_category_id\"), ",
                    "        title: pm.environment.get(\"new_category_title\")",
                    "    };",
                    "",
                    "    switch (pm.environment.get(\"new_category_status\")){",
                    "        case 'CREATED':",
                    "            pm.test(\"Added Category found\", () => {",
                    "                pm.expect(jsonData.find(category => category.id === newCategory.id).title).to.eql(newCategory.title);",
                    "            });",
                    "            postman.setNextRequest(\"Delete Category\");",
                    "            break;",
                    "        case 'DELETED':",
                    "            pm.test(\"Deleted Category not found\", () => {",
                    "            pm.expect(jsonData.find(category => category.id === newCategory.id)).to.be.undefined;",
                    "            });",
                    "            postman.setNextRequest(null);",
                    "            break;",
                    "        default:",
                    "        break;",
                    "    }",
                    "",
                    "}",
                    "",
                    "",
                    "",
                    "",
                    ""
                  ],
                  "_lastExecutionId": "88b0e79e-857a-47f5-8253-2401bc698ad9"
                }
              }
            ]
          },
          {
            "id": "6ad3d7b4-7e75-444f-97d7-c4075c3bba1a",
            "name": "Delete Category",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "api",
                  "category",
                  ":id"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": [
                  {
                    "type": "any",
                    "value": "{{new_category_id}}",
                    "key": "id"
                  }
                ]
              },
              "method": "DELETE",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9010b652-3477-40eb-b3e4-a71e3f52bd2f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "const schema = {",
                    "   \"id\": \"number\",",
                    "    \"title\": \"string\"",
                    "};",
                    "",
                    "pm.test('Schema is valid', function() {",
                    "  pm.response.to.have.jsonSchema(schema);",
                    "});",
                    "",
                    "if(pm.environment.get(\"environmentName\")==='test'){",
                    "",
                    "    pm.environment.set(\"new_category_status\", 'DELETED');",
                    "",
                    "    postman.setNextRequest(\"Get All Categories\");",
                    "",
                    "}"
                  ],
                  "_lastExecutionId": "c93bc5a8-7385-4fde-8534-215da680ef8c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "47b3cf6c-d3cd-49d8-a14b-31df80462643",
        "name": "Project",
        "item": [
          {
            "id": "6c49a0f0-3b9c-459b-b5e3-3c6264199cdf",
            "name": "Get All Projects",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "api",
                  "project"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [
                  {
                    "description": {
                      "content": "page number",
                      "type": "text/plain"
                    },
                    "key": "page",
                    "value": "0"
                  },
                  {
                    "description": {
                      "content": "page size",
                      "type": "text/plain"
                    },
                    "key": "size",
                    "value": "20"
                  },
                  {
                    "description": {
                      "content": "property name, asc/desc ordering",
                      "type": "text/plain"
                    },
                    "key": "sort",
                    "value": "name,desc"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "437a6e07-5899-467c-8614-6157a98bf987",
            "name": "Create Project",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "api",
                  "project"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"name\": \"{{$randomJobTitle}}\",\n    \"description\": \"{{$randomLoremSentence}}\"\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": []
          },
          {
            "id": "5699c7ee-9717-4ad8-97f1-2522a0949cca",
            "name": "Delete Project",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "api",
                  "project",
                  ":id"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": [
                  {
                    "type": "any",
                    "value": "953",
                    "key": "id"
                  }
                ]
              },
              "method": "DELETE",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"title\": \"{{$randomJobType}}\"\n}\n",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "2e52642c-da90-4aac-87d8-43af1df5cbed",
        "name": "Freelancer",
        "item": [
          {
            "id": "3055612d-0d28-451c-95a9-ad48f348c2b9",
            "name": "Comment",
            "item": [
              {
                "id": "27331508-cad3-4fd7-b211-cb381a1325e1",
                "name": "Get All Comments",
                "request": {
                  "url": {
                    "path": [
                      "v1",
                      "api",
                      "freelancer",
                      ":id",
                      "comment"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "description": {
                          "content": "page number",
                          "type": "text/plain"
                        },
                        "key": "page",
                        "value": "0"
                      },
                      {
                        "description": {
                          "content": "page size",
                          "type": "text/plain"
                        },
                        "key": "size",
                        "value": "40"
                      },
                      {
                        "disabled": true,
                        "description": {
                          "content": "property name, asc/desc ordering",
                          "type": "text/plain"
                        },
                        "key": "sort",
                        "value": "firstName,desc"
                      }
                    ],
                    "variable": [
                      {
                        "type": "any",
                        "value": "554",
                        "key": "id"
                      }
                    ]
                  },
                  "method": "GET"
                },
                "response": [],
                "event": []
              },
              {
                "id": "f868852c-acc1-4584-9735-27ef7f1eb5ae",
                "name": "Create Comment",
                "request": {
                  "url": {
                    "path": [
                      "v1",
                      "api",
                      "freelancer",
                      ":id",
                      "comment"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "type": "any",
                        "value": "554",
                        "key": "id"
                      }
                    ]
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"value\": \"{{$randomLoremParagraph}}\"\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": []
              },
              {
                "id": "81b2a639-5b3d-4a56-afe7-a49b84231db4",
                "name": "Patch Comment",
                "request": {
                  "url": {
                    "path": [
                      "v1",
                      "api",
                      "freelancer",
                      ":id",
                      "comment",
                      ":commentId"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "type": "any",
                        "value": "552",
                        "key": "id"
                      },
                      {
                        "type": "any",
                        "value": "1202",
                        "key": "commentId"
                      }
                    ]
                  },
                  "method": "PATCH",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"value\": \"{{$randomLoremParagraph}}\"\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": []
              },
              {
                "id": "450d4e49-a750-4243-9d9e-d875a790ff20",
                "name": "Delete Comment",
                "request": {
                  "url": {
                    "path": [
                      "v1",
                      "api",
                      "freelancer",
                      ":id",
                      "comment",
                      ":commentId"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "type": "any",
                        "value": "552",
                        "key": "id"
                      },
                      {
                        "type": "any",
                        "value": "1202",
                        "key": "commentId"
                      }
                    ]
                  },
                  "method": "DELETE",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"title\": \"{{$randomJobType}}\"\n}\n",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d7a5f7d5-ef76-4520-aff3-bf96f350b243",
            "name": "Category",
            "item": [
              {
                "id": "a6d9ddb7-13c4-4a83-8e37-ee012481f988",
                "name": "Add Category",
                "request": {
                  "url": {
                    "path": [
                      "v1",
                      "api",
                      "freelancer",
                      ":id",
                      "category",
                      ":categoryId"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "type": "any",
                        "value": "554",
                        "key": "id"
                      },
                      {
                        "type": "any",
                        "value": "410",
                        "key": "categoryId"
                      }
                    ]
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": []
              },
              {
                "id": "27cadcae-9ee4-4c8b-b594-627147a57b7c",
                "name": "Remove Category",
                "request": {
                  "url": {
                    "path": [
                      "v1",
                      "api",
                      "freelancer",
                      ":id",
                      "category",
                      ":categoryId"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "type": "any",
                        "value": "552",
                        "key": "id"
                      },
                      {
                        "type": "any",
                        "value": "408",
                        "key": "categoryId"
                      }
                    ]
                  },
                  "method": "DELETE",
                  "body": {
                    "mode": "raw",
                    "raw": "",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b28ad456-adc9-4c53-afcc-3df32540a3b7",
            "name": "Get All Freelancers",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "api",
                  "freelancer"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [
                  {
                    "description": {
                      "content": "page number",
                      "type": "text/plain"
                    },
                    "key": "page",
                    "value": "0"
                  },
                  {
                    "description": {
                      "content": "page size",
                      "type": "text/plain"
                    },
                    "key": "size",
                    "value": "30"
                  },
                  {
                    "description": {
                      "content": "property name, asc/desc ordering",
                      "type": "text/plain"
                    },
                    "key": "sort",
                    "value": "firstName,asc"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "99a24e7f-cc4e-4ea3-8c8c-ac6582a5be51",
            "name": "Get Freelancer",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "api",
                  "freelancer",
                  "554"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "id": "0bcbb431-bb37-44b1-a51d-a0dc07874a4f",
            "name": "Create Freelancer",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "api",
                  "freelancer"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"username\": \"{{$randomUserName}}\",\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\"\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": []
          },
          {
            "id": "4fd2b782-661a-4865-8f78-74db3da25ce9",
            "name": "Delete Freelancer",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "api",
                  "freelancer",
                  ":id"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": [
                  {
                    "type": "any",
                    "value": "552",
                    "key": "id"
                  }
                ]
              },
              "method": "DELETE",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"title\": \"{{$randomJobType}}\"\n}\n",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "61137997-0a09-4aa6-ab93-1699b00c3c2f",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "6d32e161-9cb4-4afb-ad4d-9c17175e2af8"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "1a3ac20e-64e0-4b08-bbdd-de746bd3ea13",
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Response time is less than 200ms\", () => {",
            "  pm.expect(pm.response.responseTime).to.be.below(200);",
            "});",
            ""
          ],
          "_lastExecutionId": "1aea2a38-daf2-47be-ad5b-18aea5b2590d"
        }
      }
    ],
    "variable": [
      {
        "type": "string",
        "value": "http://localhost:8081",
        "key": "baseUrl"
      }
    ],
    "info": {
      "_postman_id": "303af0cc-01f6-4956-9cab-e017191ac24b",
      "name": "Hibernate-search-6-example",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2022-09-16T18:14:34.945Z",
      "postman_exported_using": "Postman/9.31.7"
    },
    "id": "5fda72fa-758a-4e47-af6d-39b362bb6a2e",
    "name": "Test Environment",
    "values": [
      {
        "type": "any",
        "value": "Executive",
        "key": "new_category_title"
      },
      {
        "type": "any",
        "value": 1362,
        "key": "new_category_id"
      },
      {
        "type": "any",
        "value": "test",
        "key": "environmentName"
      },
      {
        "type": "any",
        "value": "DELETED",
        "key": "new_category_status"
      }
    ]
  },
  "globals": {
    "id": "49f68289-be4a-4c86-b424-26bf52ef9d9e",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 4,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 13,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 4,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 4,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 4,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 16,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 8,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 5,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 57.75,
      "responseMin": 20,
      "responseMax": 158,
      "responseSd": 57.96712430334974,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1663353423376,
      "completed": 1663353424089
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 16,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "eb69f75d-62de-43ed-ae91-f36337171142",
          "httpRequestId": "7321bbdb-8ad4-4d73-a20f-cda49712ebac"
        },
        "item": {
          "id": "20f3695d-19a8-45d9-8e96-026be4837c38",
          "name": "Create Category",
          "request": {
            "url": {
              "path": [
                "v1",
                "api",
                "category"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"{{new_category_title}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "14844ee3-5376-48ba-8a10-a1266ac37b23",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"new_category_title\", pm.variables.replaceIn('{{$randomJobType}}'));",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "d30ec3eb-6d53-4726-968b-ad4e0d655766"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "51443e4c-1725-4d88-82b0-7cf83c238c9b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "const schema = {",
                  "   \"id\": \"number\",",
                  "    \"title\": \"string\"",
                  "};",
                  "pm.test('Schema is valid', function() {",
                  "  pm.response.to.have.jsonSchema(schema);",
                  "});",
                  "",
                  "const jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Test data type of the response\", () => {",
                  "    pm.expect(jsonData).to.be.an(\"object\");",
                  "    pm.expect(jsonData.id).to.be.a(\"number\");",
                  "    pm.expect(jsonData.title).to.be.a(\"string\");",
                  "});",
                  "",
                  "",
                  "pm.test(\"Category added correctly\", () => {",
                  "    pm.expect(jsonData.title).to.eql(pm.environment.get(\"new_category_title\"));",
                  "});",
                  "",
                  "if(pm.environment.get(\"environmentName\")==='test'){",
                  "",
                  "    pm.environment.set(\"new_category_id\", jsonData.id);",
                  "        pm.environment.set(\"new_category_status\", 'CREATED');",
                  "",
                  "    postman.setNextRequest(\"Get All Categories\");",
                  "}",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "f65798a8-3f3b-4508-bf7e-1b5a5c049650"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8081",
            "path": [
              "v1",
              "api",
              "category"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "39926431-5209-430a-b8ae-e9a2fcfa9576",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8081",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "28",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"title\": \"Executive\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "f4d3d27f-5453-497b-98f4-1cc55f585458",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 16 Sep 2022 18:37:03 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              54,
              50,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              69,
              120,
              101,
              99,
              117,
              116,
              105,
              118,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 158,
          "responseSize": 31
        },
        "id": "20f3695d-19a8-45d9-8e96-026be4837c38",
        "assertions": [
          {
            "assertion": "Response time is less than 200ms",
            "skipped": false
          },
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Schema is valid",
            "skipped": false
          },
          {
            "assertion": "Test data type of the response",
            "skipped": false
          },
          {
            "assertion": "Category added correctly",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f2f37d52-a222-4971-b43f-ab2fa91ec81a",
          "length": 16,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d73dbea1-68f4-4875-a63c-49f8fac6a0af"
        },
        "item": {
          "id": "9d97d5d7-46df-4cb3-aa74-5a78b178dc53",
          "name": "Get All Categories",
          "request": {
            "url": {
              "path": [
                "v1",
                "api",
                "category"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e7930b99-f0c0-48be-83f5-66c73fba1261",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "",
                  "var schema = {",
                  "    \"type\": \"array\",",
                  "    \"items\": [ {",
                  "       \"id\": \"number\",",
                  "        \"title\": \"string\"",
                  "    }]",
                  "};",
                  "",
                  "pm.test('Schema is valid', function() {",
                  "  pm.response.to.have.jsonSchema(schema);",
                  "});",
                  "",
                  "",
                  "if(pm.environment.get(\"environmentName\")==='test'){",
                  "",
                  "const jsonData = pm.response.json();",
                  "",
                  "    const newCategory = {",
                  "        id:pm.environment.get(\"new_category_id\"), ",
                  "        title: pm.environment.get(\"new_category_title\")",
                  "    };",
                  "",
                  "    switch (pm.environment.get(\"new_category_status\")){",
                  "        case 'CREATED':",
                  "            pm.test(\"Added Category found\", () => {",
                  "                pm.expect(jsonData.find(category => category.id === newCategory.id).title).to.eql(newCategory.title);",
                  "            });",
                  "            postman.setNextRequest(\"Delete Category\");",
                  "            break;",
                  "        case 'DELETED':",
                  "            pm.test(\"Deleted Category not found\", () => {",
                  "            pm.expect(jsonData.find(category => category.id === newCategory.id)).to.be.undefined;",
                  "            });",
                  "            postman.setNextRequest(null);",
                  "            break;",
                  "        default:",
                  "        break;",
                  "    }",
                  "",
                  "}",
                  "",
                  "",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "88b0e79e-857a-47f5-8253-2401bc698ad9"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8081",
            "path": [
              "v1",
              "api",
              "category"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3d49afdb-8a5d-4e7c-86ee-0363fbf8b92c",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8081",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "d3080f16-c46b-4d99-ad00-eb08f9a14a30",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 16 Sep 2022 18:37:03 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              48,
              56,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              65,
              115,
              115,
              111,
              99,
              105,
              97,
              116,
              101,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              49,
              48,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              83,
              117,
              112,
              101,
              114,
              118,
              105,
              115,
              111,
              114,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              49,
              52,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              84,
              101,
              99,
              104,
              110,
              105,
              99,
              105,
              97,
              110,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              49,
              53,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              70,
              97,
              99,
              105,
              108,
              105,
              116,
              97,
              116,
              111,
              114,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              49,
              54,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              65,
              110,
              97,
              108,
              121,
              115,
              116,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              49,
              55,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              80,
              114,
              111,
              100,
              117,
              99,
              101,
              114,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              49,
              56,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              68,
              101,
              115,
              105,
              103,
              110,
              101,
              114,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              48,
              50,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              82,
              101,
              112,
              114,
              101,
              115,
              101,
              110,
              116,
              97,
              116,
              105,
              118,
              101,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              48,
              51,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              123,
              123,
              36,
              110,
              101,
              119,
              95,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              95,
              116,
              105,
              116,
              108,
              101,
              125,
              125,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              48,
              52,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              123,
              123,
              36,
              110,
              101,
              119,
              95,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              95,
              116,
              105,
              116,
              108,
              101,
              125,
              125,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              48,
              54,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              123,
              123,
              36,
              110,
              101,
              119,
              95,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              95,
              116,
              105,
              116,
              108,
              101,
              125,
              125,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              48,
              56,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              123,
              123,
              36,
              110,
              101,
              119,
              95,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              95,
              116,
              105,
              116,
              108,
              101,
              125,
              125,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              48,
              57,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              68,
              101,
              115,
              105,
              103,
              110,
              101,
              114,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              49,
              48,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              123,
              123,
              36,
              110,
              101,
              119,
              95,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              95,
              116,
              105,
              116,
              108,
              101,
              125,
              125,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              49,
              49,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              82,
              101,
              112,
              114,
              101,
              115,
              101,
              110,
              116,
              97,
              116,
              105,
              118,
              101,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              49,
              50,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              65,
              100,
              109,
              105,
              110,
              105,
              115,
              116,
              114,
              97,
              116,
              111,
              114,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              49,
              51,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              77,
              97,
              110,
              97,
              103,
              101,
              114,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              55,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              65,
              114,
              99,
              104,
              105,
              116,
              101,
              99,
              116,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              54,
              50,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              69,
              120,
              101,
              99,
              117,
              116,
              105,
              118,
              101,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 24,
          "responseSize": 683
        },
        "id": "9d97d5d7-46df-4cb3-aa74-5a78b178dc53",
        "assertions": [
          {
            "assertion": "Response time is less than 200ms",
            "skipped": false
          },
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Schema is valid",
            "skipped": false
          },
          {
            "assertion": "Added Category found",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3db377fe-4432-4d8f-851e-74e5ed5e0c44",
          "length": 16,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7f096317-5449-4d29-944a-9f1e39edddc8"
        },
        "item": {
          "id": "6ad3d7b4-7e75-444f-97d7-c4075c3bba1a",
          "name": "Delete Category",
          "request": {
            "url": {
              "path": [
                "v1",
                "api",
                "category",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "type": "any",
                  "value": "{{new_category_id}}",
                  "key": "id"
                }
              ]
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9010b652-3477-40eb-b3e4-a71e3f52bd2f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const schema = {",
                  "   \"id\": \"number\",",
                  "    \"title\": \"string\"",
                  "};",
                  "",
                  "pm.test('Schema is valid', function() {",
                  "  pm.response.to.have.jsonSchema(schema);",
                  "});",
                  "",
                  "if(pm.environment.get(\"environmentName\")==='test'){",
                  "",
                  "    pm.environment.set(\"new_category_status\", 'DELETED');",
                  "",
                  "    postman.setNextRequest(\"Get All Categories\");",
                  "",
                  "}"
                ],
                "_lastExecutionId": "c93bc5a8-7385-4fde-8534-215da680ef8c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8081",
            "path": [
              "v1",
              "api",
              "category",
              "1362"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6f98188e-60b4-4bc5-85f0-6da4e84df228",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8081",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "b019ce1f-5bea-4f84-8120-e166788d92fc",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 16 Sep 2022 18:37:03 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              54,
              50,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              69,
              120,
              101,
              99,
              117,
              116,
              105,
              118,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 29,
          "responseSize": 31
        },
        "id": "6ad3d7b4-7e75-444f-97d7-c4075c3bba1a",
        "assertions": [
          {
            "assertion": "Response time is less than 200ms",
            "skipped": false
          },
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Schema is valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e7a4cc9a-70d7-44fe-8875-1f1d8be34b52",
          "length": 16,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0e905309-08a0-41db-8add-5f2d64413279"
        },
        "item": {
          "id": "9d97d5d7-46df-4cb3-aa74-5a78b178dc53",
          "name": "Get All Categories",
          "request": {
            "url": {
              "path": [
                "v1",
                "api",
                "category"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e7930b99-f0c0-48be-83f5-66c73fba1261",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "",
                  "var schema = {",
                  "    \"type\": \"array\",",
                  "    \"items\": [ {",
                  "       \"id\": \"number\",",
                  "        \"title\": \"string\"",
                  "    }]",
                  "};",
                  "",
                  "pm.test('Schema is valid', function() {",
                  "  pm.response.to.have.jsonSchema(schema);",
                  "});",
                  "",
                  "",
                  "if(pm.environment.get(\"environmentName\")==='test'){",
                  "",
                  "const jsonData = pm.response.json();",
                  "",
                  "    const newCategory = {",
                  "        id:pm.environment.get(\"new_category_id\"), ",
                  "        title: pm.environment.get(\"new_category_title\")",
                  "    };",
                  "",
                  "    switch (pm.environment.get(\"new_category_status\")){",
                  "        case 'CREATED':",
                  "            pm.test(\"Added Category found\", () => {",
                  "                pm.expect(jsonData.find(category => category.id === newCategory.id).title).to.eql(newCategory.title);",
                  "            });",
                  "            postman.setNextRequest(\"Delete Category\");",
                  "            break;",
                  "        case 'DELETED':",
                  "            pm.test(\"Deleted Category not found\", () => {",
                  "            pm.expect(jsonData.find(category => category.id === newCategory.id)).to.be.undefined;",
                  "            });",
                  "            postman.setNextRequest(null);",
                  "            break;",
                  "        default:",
                  "        break;",
                  "    }",
                  "",
                  "}",
                  "",
                  "",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "88b0e79e-857a-47f5-8253-2401bc698ad9"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8081",
            "path": [
              "v1",
              "api",
              "category"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "dbe06c46-42e6-40ea-a5c7-4af7755abaf8",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8081",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "9b6122ef-8cdb-4ad7-8efc-e4267452c37e",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 16 Sep 2022 18:37:03 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              48,
              56,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              65,
              115,
              115,
              111,
              99,
              105,
              97,
              116,
              101,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              49,
              48,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              83,
              117,
              112,
              101,
              114,
              118,
              105,
              115,
              111,
              114,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              49,
              52,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              84,
              101,
              99,
              104,
              110,
              105,
              99,
              105,
              97,
              110,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              49,
              53,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              70,
              97,
              99,
              105,
              108,
              105,
              116,
              97,
              116,
              111,
              114,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              49,
              54,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              65,
              110,
              97,
              108,
              121,
              115,
              116,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              49,
              55,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              80,
              114,
              111,
              100,
              117,
              99,
              101,
              114,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              49,
              56,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              68,
              101,
              115,
              105,
              103,
              110,
              101,
              114,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              48,
              50,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              82,
              101,
              112,
              114,
              101,
              115,
              101,
              110,
              116,
              97,
              116,
              105,
              118,
              101,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              48,
              51,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              123,
              123,
              36,
              110,
              101,
              119,
              95,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              95,
              116,
              105,
              116,
              108,
              101,
              125,
              125,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              48,
              52,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              123,
              123,
              36,
              110,
              101,
              119,
              95,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              95,
              116,
              105,
              116,
              108,
              101,
              125,
              125,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              48,
              54,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              123,
              123,
              36,
              110,
              101,
              119,
              95,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              95,
              116,
              105,
              116,
              108,
              101,
              125,
              125,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              48,
              56,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              123,
              123,
              36,
              110,
              101,
              119,
              95,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              95,
              116,
              105,
              116,
              108,
              101,
              125,
              125,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              48,
              57,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              68,
              101,
              115,
              105,
              103,
              110,
              101,
              114,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              49,
              48,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              123,
              123,
              36,
              110,
              101,
              119,
              95,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              95,
              116,
              105,
              116,
              108,
              101,
              125,
              125,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              49,
              49,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              82,
              101,
              112,
              114,
              101,
              115,
              101,
              110,
              116,
              97,
              116,
              105,
              118,
              101,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              49,
              50,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              65,
              100,
              109,
              105,
              110,
              105,
              115,
              116,
              114,
              97,
              116,
              111,
              114,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              49,
              51,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              77,
              97,
              110,
              97,
              103,
              101,
              114,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              55,
              44,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              34,
              65,
              114,
              99,
              104,
              105,
              116,
              101,
              99,
              116,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 20,
          "responseSize": 651
        },
        "id": "9d97d5d7-46df-4cb3-aa74-5a78b178dc53",
        "assertions": [
          {
            "assertion": "Response time is less than 200ms",
            "skipped": false
          },
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Schema is valid",
            "skipped": false
          },
          {
            "assertion": "Deleted Category not found",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 1396
    },
    "failures": [],
    "error": null
  }
}